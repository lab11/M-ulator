CROSS_ARM_PREFIX=arm-none-eabi
ARM_CC=$(CROSS_ARM_PREFIX)-gcc
ARM_LD=$(CROSS_ARM_PREFIX)-ld
ARM_AS=$(CROSS_ARM_PREFIX)-as
ARM_OBJDUMP=$(CROSS_ARM_PREFIX)-objdump
ARM_OBJCOPY=$(CROSS_ARM_PREFIX)-objcopy

ARM_CFLAGS  += -g -Wall -Wextra -Werror -mthumb -mcpu=@(CPU) -ffreestanding
ARM_LDFLAGS += -g -nostartfiles -nodefaultlibs -nostdlib
ARM_ASFLAGS += -g -mthumb --warn -mcpu=@(CPU)

&MEMMAP = memmap

ifeq (@(DEBUG_SYMBOLS),y)
!arm_as = |> ^ ARM_AS %f^ $(ARM_AS) $(ARM_ASFLAGS) %f -o %o |> %B.o
!arm_cc = |> ^ ARM_CC %f^ $(ARM_CC) $(ARM_CFLAGS) -c %f -o %o |> %B.o
!arm_ld = | ../vectors.o |> ^ ARM_LD %o^ $(ARM_LD) $(ARM_LDFLAGS) -T &(MEMMAP) ../vectors.o %f -o %o |> %B.elf
!arm_dump = |> ^ ARM_DUMP %o^ $(ARM_OBJDUMP) -d %f > %o |> %B.dump
!arm_bin = |> ^ ARM_BIN %o^ $(ARM_OBJCOPY) -O binary %f %o |> %B.bin
!arm_lst = |> ^ ARM_LST %o^ $(ARM_OBJDUMP) --disassemble-all --source --disassembler-options=force-thumb %f > %o |> %B.lst
else
!arm_as = |> ^ ARM_AS %f^ $(ARM_AS) $(ARM_ASFLAGS) %f -o %o |> %B.o
!arm_cc = |> ^ ARM_CC %f^ $(ARM_CC) $(ARM_CFLAGS) -c %f -o %o |> %B.o
!arm_ld = | ../vectors.o |> ^ ARM_LD %o^ $(ARM_LD) $(ARM_LDFLAGS) -T &(MEMMAP) ../vectors.o %f -o %o |> %B.elf
!arm_dump = |> ^ ARM_DUMP %o^ $(ARM_OBJDUMP) -d %f > %o |> %B.dump
!arm_bin = |> ^ ARM_BIN %o^ $(ARM_OBJCOPY) -O binary %f %o |> %B.bin
!arm_lst = |> ^ ARM_LST %o^ $(ARM_OBJDUMP) --disassemble-all --source --disassembler-options=force-thumb %f > %o |> %B.lst
endif

