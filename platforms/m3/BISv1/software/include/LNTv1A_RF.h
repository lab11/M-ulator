//************************************************************
// Desciption: LNTv1A Register File Header File
//      Generated by genRF (Version 1.2) 06/18/2018 03:15:49
//************************************************************

#ifndef LNTV1A_RF_H
#define LNTV1A_RF_H

// Register 0x00
typedef union lntv1a_r00{
  struct{
    unsigned LDC_PG		: 1;
    unsigned LDC_ISOLATE		: 1;
    unsigned RESETN_DBE		: 1;
    unsigned RESET_AFE		: 1;
    unsigned DBE_ENABLE		: 1;
    unsigned MODE_CONTINUOUS		: 1;
    unsigned WAKEUP_WHEN_DONE		: 1;
  };
  uint32_t as_int;
} lntv1a_r00_t;
#define LNTv1A_R00_DEFAULT {{0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union lntv1a_r01{
  struct{
    unsigned CTRL_IBIAS_I		: 4;
    unsigned CTRL_IBIAS_VBIAS		: 4;
    unsigned CTRL_VOFS_CANCEL		: 1;
    unsigned CTRL_ICOMP		: 3;
    unsigned CTRL_CAPSIZE		: 3;
  };
  uint32_t as_int;
} lntv1a_r01_t;
#define LNTv1A_R01_DEFAULT {{0x8, 0x7, 0x1, 0x3, 0x3}}
_Static_assert(sizeof(lntv1a_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union lntv1a_r02{
  struct{
    unsigned CTRLB_VREF_PV_I		: 7;
    unsigned CTRL_VREF_PV_V		: 2;
    unsigned CTRLB_VREF_COMP_I		: 7;
    unsigned CTRL_VREF_COMP_V		: 2;
  };
  uint32_t as_int;
} lntv1a_r02_t;
#define LNTv1A_R02_DEFAULT {{0x67, 0x2, 0x67, 0x3}}
_Static_assert(sizeof(lntv1a_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union lntv1a_r03{
  struct{
    unsigned TIME_COUNTING		: 24;
  };
  uint32_t as_int;
} lntv1a_r03_t;
#define LNTv1A_R03_DEFAULT {{0x000258}}
_Static_assert(sizeof(lntv1a_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union lntv1a_r04{
  struct{
    unsigned TIME_MONITORING		: 12;
    unsigned TIME_MONITOR_HOLD		: 12;
  };
  uint32_t as_int;
} lntv1a_r04_t;
#define LNTv1A_R04_DEFAULT {{0x00A, 0x000}}
_Static_assert(sizeof(lntv1a_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union lntv1a_r05{
  struct{
    unsigned THRESHOLD_LOW		: 12;
    unsigned THRESHOLD_HIGH		: 12;
  };
  uint32_t as_int;
} lntv1a_r05_t;
#define LNTv1A_R05_DEFAULT {{0x014, 0x028}}
_Static_assert(sizeof(lntv1a_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union lntv1a_r06{
  struct{
    unsigned OBSEN_AFEOUT		: 1;
  };
  uint32_t as_int;
} lntv1a_r06_t;
#define LNTv1A_R06_DEFAULT {{0x0}}
_Static_assert(sizeof(lntv1a_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union lntv1a_r07{
  struct{
    unsigned OBSSEL_ABUF		: 2;
  };
  uint32_t as_int;
} lntv1a_r07_t;
#define LNTv1A_R07_DEFAULT {{0x0}}
_Static_assert(sizeof(lntv1a_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union lntv1a_r08{
  struct{
    unsigned OVSEL_VREF_PV		: 1;
    unsigned OVSEL_VREF_COMP		: 1;
    unsigned OVSEL_IBIAS_VBIAS		: 1;
  };
  uint32_t as_int;
} lntv1a_r08_t;
#define LNTv1A_R08_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union lntv1a_r09{
  struct{
    unsigned OVSEL_DIN		: 1;
    unsigned OVVAL_DIN		: 1;
  };
  uint32_t as_int;
} lntv1a_r09_t;
#define LNTv1A_R09_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union lntv1a_r0A{
  struct{
    unsigned OVSEL_CLK		: 1;
    unsigned OVVAL_CLK		: 1;
  };
  uint32_t as_int;
} lntv1a_r0A_t;
#define LNTv1A_R0A_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union lntv1a_r0B{
  struct{
    unsigned OVSEL_CONFIG		: 1;
    unsigned OVVAL_CONFIG		: 5;
  };
  uint32_t as_int;
} lntv1a_r0B_t;
#define LNTv1A_R0B_DEFAULT {{0x0, 0x00}}
_Static_assert(sizeof(lntv1a_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union lntv1a_r0C{
  struct{
    unsigned OVSEL_MONITOR_STATE		: 1;
    unsigned OVVAL_MONITOR_STATE		: 3;
  };
  uint32_t as_int;
} lntv1a_r0C_t;
#define LNTv1A_R0C_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
typedef union lntv1a_r0D{
  struct{
    unsigned OVSEL_COUNTER_STATE		: 1;
    unsigned OVVAL_COUNTER_STATE		: 3;
  };
  uint32_t as_int;
} lntv1a_r0D_t;
#define LNTv1A_R0D_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E
typedef union lntv1a_r0E{
  struct{
    unsigned OVVAL_CTRLB_ICHARGE_DIV_LOWLEAK		: 1;
    unsigned OVVAL_CTRLB_ICHARGE_MUL_LOWLEAK		: 1;
    unsigned OVVAL_CTRL_ICHARGE_DIV		: 7;
    unsigned OVVAL_CTRLB_ICHARGE_DIV		: 3;
    unsigned OVVAL_CTRL_ICHARGE_MUL		: 7;
  };
  uint32_t as_int;
} lntv1a_r0E_t;
#define LNTv1A_R0E_DEFAULT {{0x0, 0x0, 0x00, 0x0, 0x00}}
_Static_assert(sizeof(lntv1a_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union lntv1a_r0F{
  struct{
    unsigned OVSEL_CTRLB_ICHARGE_DIV_LOWLEAK		: 1;
    unsigned OVSEL_CTRLB_ICHARGE_MUL_LOWLEAK		: 1;
    unsigned OVSEL_CTRL_ICHARGE_DIV		: 1;
    unsigned OVSEL_CTRLB_ICHARGE_DIV		: 1;
    unsigned OVSEL_CTRL_ICHARGE_MUL		: 1;
  };
  uint32_t as_int;
} lntv1a_r0F_t;
#define LNTv1A_R0F_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
// -- READ-ONLY --

// Register 0x11
// -- READ-ONLY --

// Register 0x12
// -- READ-ONLY --

// Register 0x13
// -- READ-ONLY --

// Register 0x14
// -- READ-ONLY --

// Register 0x15
// -- READ-ONLY --

// Register 0x16
// -- READ-ONLY --

// Register 0x17
typedef union lntv1a_r17{
  struct{
    unsigned FDIV_RESETN		: 1;
    unsigned FDIV_CTRL_FREQ		: 4;
  };
  uint32_t as_int;
} lntv1a_r17_t;
#define LNTv1A_R17_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r17_t) == 4, "Punned Structure Size");

// Register 0x18
// -- EMPTY --

// Register 0x19
// -- EMPTY --

// Register 0x1A
// -- EMPTY --

// Register 0x1B
// -- EMPTY --

// Register 0x1C
// -- EMPTY --

// Register 0x1D
// -- EMPTY --

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
typedef union lntv1a_r20{
  struct{
    unsigned TMR_EN_SELF_CLK		: 1;
    unsigned TMR_RESETB_DCDC		: 1;
    unsigned TMR_RESETB_DIV		: 1;
    unsigned TMR_EN_OSC		: 1;
    unsigned TMR_RESETB		: 1;
  };
  uint32_t as_int;
} lntv1a_r20_t;
#define LNTv1A_R20_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(lntv1a_r20_t) == 4, "Punned Structure Size");

// Register 0x21
typedef union lntv1a_r21{
  struct{
    unsigned TMR_EN_TUNE2		: 1;
    unsigned TMR_EN_TUNE1		: 1;
    unsigned TMR_SEL_DCAP		: 6;
    unsigned TMR_SEL_CAP		: 8;
    unsigned TMR_CASCODE_BOOST		: 1;
    unsigned TMR_IBIAS_REF		: 4;
    unsigned TMR_SELF_EN		: 1;
    unsigned TMR_SEL_CLK_OSC		: 1;
    unsigned TMR_SEL_CLK_DIV		: 1;
  };
  uint32_t as_int;
} lntv1a_r21_t;
#define LNTv1A_R21_DEFAULT {{0x1, 0x1, 0x04, 0x08, 0x0, 0x4, 0x1, 0x1, 0x1}}
_Static_assert(sizeof(lntv1a_r21_t) == 4, "Punned Structure Size");

// Register 0x22
typedef union lntv1a_r22{
  struct{
    unsigned TMR_AFC		: 3;
    unsigned TMR_SAMPLE_EN		: 1;
    unsigned TMR_EN_TUNE2_RES		: 1;
    unsigned TMR_EN_TUNE1_RES		: 1;
    unsigned TMR_POLY_CON		: 1;
    unsigned TMR_DIFF_CON		: 14;
    unsigned TMR_S		: 3;
  };
  uint32_t as_int;
} lntv1a_r22_t;
#define LNTv1A_R22_DEFAULT {{0x4, 0x1, 0x1, 0x1, 0x1, 0x3FFB, 0x4}}
_Static_assert(sizeof(lntv1a_r22_t) == 4, "Punned Structure Size");

// Register 0x23
// -- EMPTY --

// Register 0x24
// -- EMPTY --

// Register 0x25
// -- EMPTY --

// Register 0x26
// -- EMPTY --

// Register 0x27
// -- EMPTY --

// Register 0x28
// -- EMPTY --

// Register 0x29
// -- EMPTY --

// Register 0x2A
// -- EMPTY --

// Register 0x2B
// -- EMPTY --

// Register 0x2C
// -- EMPTY --

// Register 0x2D
// -- EMPTY --

// Register 0x2E
// -- EMPTY --

// Register 0x2F
// -- EMPTY --

// Register 0x30
typedef union lntv1a_r30{
  struct{
    unsigned CLKGEN_RING		: 2;
    unsigned CLKGEN_DIV		: 2;
    unsigned MBUS_IGNORE_RX_FAIL		: 1;
    unsigned WAKEUP_ON_PEND_REQ		: 1;
  };
  uint32_t as_int;
} lntv1a_r30_t;
#define LNTv1A_R30_DEFAULT {{0x1, 0x2, 0x1, 0x0}}
_Static_assert(sizeof(lntv1a_r30_t) == 4, "Punned Structure Size");

// Register 0x31
typedef union lntv1a_r31{
  struct{
    unsigned LDC_IRQ_REG_ADDR		: 8;
    unsigned LDC_IRQ_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} lntv1a_r31_t;
#define LNTv1A_R31_DEFAULT {{0x00, 0x10}}
_Static_assert(sizeof(lntv1a_r31_t) == 4, "Punned Structure Size");

// Register 0x32
typedef union lntv1a_r32{
  struct{
    unsigned LDC_IRQ_NUM_REG_1		: 8;
    unsigned LDC_IRQ_START_REG_ADDR		: 8;
  };
  uint32_t as_int;
} lntv1a_r32_t;
#define LNTv1A_R32_DEFAULT {{0x01, 0x10}}
_Static_assert(sizeof(lntv1a_r32_t) == 4, "Punned Structure Size");

// Register 0x33
// -- EMPTY --

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
// -- EMPTY --

// Register 0x40
typedef union lntv1a_r40{
  struct{
    unsigned NOT_DEFINED_64_0		: 1;
    unsigned NOT_DEFINED_64_1		: 1;
    unsigned NOT_DEFINED_64_2		: 1;
    unsigned NOT_DEFINED_64_3		: 1;
    unsigned NOT_DEFINED_64_4		: 1;
    unsigned NOT_DEFINED_64_5		: 1;
    unsigned NOT_DEFINED_64_6		: 1;
    unsigned NOT_DEFINED_64_7		: 1;
    unsigned NOT_DEFINED_64_8		: 1;
    unsigned NOT_DEFINED_64_9		: 1;
    unsigned NOT_DEFINED_64_10		: 1;
    unsigned NOT_DEFINED_64_11		: 1;
    unsigned NOT_DEFINED_64_12		: 1;
    unsigned NOT_DEFINED_64_13		: 1;
    unsigned NOT_DEFINED_64_14		: 1;
    unsigned NOT_DEFINED_64_15		: 1;
    unsigned NOT_DEFINED_64_16		: 1;
    unsigned NOT_DEFINED_64_17		: 1;
    unsigned NOT_DEFINED_64_18		: 1;
    unsigned WUP_ENABLE_CLK_SLP_OUT		: 1;
    unsigned NOT_DEFINED_64_20		: 1;
    unsigned WUP_AUTO_RESET		: 1;
    unsigned WUP_LC_IRQ_EN		: 1;
    unsigned WUP_ENABLE		: 1;
  };
  uint32_t as_int;
} lntv1a_r40_t;
#define LNTv1A_R40_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0}}
_Static_assert(sizeof(lntv1a_r40_t) == 4, "Punned Structure Size");

// Register 0x41
typedef union lntv1a_r41{
  struct{
    unsigned WUP_THRESHOLD_EXT		: 8;
  };
  uint32_t as_int;
} lntv1a_r41_t;
#define LNTv1A_R41_DEFAULT {{0x00}}
_Static_assert(sizeof(lntv1a_r41_t) == 4, "Punned Structure Size");

// Register 0x42
typedef union lntv1a_r42{
  struct{
    unsigned WUP_THRESHOLD		: 24;
  };
  uint32_t as_int;
} lntv1a_r42_t;
#define LNTv1A_R42_DEFAULT {{0x2DC6C0}}
_Static_assert(sizeof(lntv1a_r42_t) == 4, "Punned Structure Size");

// Register 0x43
// -- READ-ONLY --

// Register 0x44
// -- READ-ONLY --

// Register 0x45
typedef union lntv1a_r45{
  struct{
    unsigned WUP_IRQ_PAYLOAD		: 24;
  };
  uint32_t as_int;
} lntv1a_r45_t;
#define LNTv1A_R45_DEFAULT {{0x025001}}
_Static_assert(sizeof(lntv1a_r45_t) == 4, "Punned Structure Size");

// Register 0x46
typedef union lntv1a_r46{
  struct{
    unsigned WUP_IRQ_REG_ADDR		: 8;
    unsigned WUP_IRQ_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} lntv1a_r46_t;
#define LNTv1A_R46_DEFAULT {{0x00, 0x10}}
_Static_assert(sizeof(lntv1a_r46_t) == 4, "Punned Structure Size");

// Register 0x47
typedef union lntv1a_r47{
  struct{
    unsigned WUP_IRQ_NUM_REG_1		: 8;
    unsigned WUP_IRQ_START_REG_ADDR		: 8;
  };
  uint32_t as_int;
} lntv1a_r47_t;
#define LNTv1A_R47_DEFAULT {{0x00, 0x35}}
_Static_assert(sizeof(lntv1a_r47_t) == 4, "Punned Structure Size");

#endif // LNTV1A_RF_H