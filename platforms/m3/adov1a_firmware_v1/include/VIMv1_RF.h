//************************************************************
// Desciption: VIMv1 Register File Header File
//      Generated by genRF (Version 1.04) 10/26/2017 15:06:54
//************************************************************

#ifndef VIMV1_RF_H
#define VIMV1_RF_H

// Register 0x00
typedef union vimv1_r00{
  struct{
    unsigned E00		: 12;
  };
  uint32_t as_int;
} vimv1_r00_t;
#define VIMv1_R00_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union vimv1_r01{
  struct{
    unsigned E01		: 12;
  };
  uint32_t as_int;
} vimv1_r01_t;
#define VIMv1_R01_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union vimv1_r02{
  struct{
    unsigned CALIBSCAN_IN		: 1;
    unsigned PT_CALIBSCAN_CLK		: 1;
    unsigned P_DAC_CALIBSCANRESET		: 1;
    unsigned F_DAC_CALIBSCANMODE		: 1;
  };
  uint32_t as_int;
} vimv1_r02_t;
#define VIMv1_R02_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union vimv1_r03{
  struct{
    unsigned R_DAC_TRANSMODE		: 2;
    unsigned R_DAC_DUMMYTRANSFER		: 1;
    unsigned R_DAC_DATADEPEND		: 1;
    unsigned C_DAC_INVISOLATE		: 1;
  };
  uint32_t as_int;
} vimv1_r03_t;
#define VIMv1_R03_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union vimv1_r04{
  struct{
    unsigned C_COMP_AVGMIDCODE		: 4;
    unsigned R_COMP_PREAMPSTR		: 3;
    unsigned C_DAC_AGCAP		: 2;
  };
  uint32_t as_int;
} vimv1_r04_t;
#define VIMv1_R04_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union vimv1_r05{
  struct{
    unsigned R_PIX_LOAD		: 3;
    unsigned R_PIX_RESETDIR		: 1;
    unsigned R_PIX_RESETVTEST		: 1;
  };
  uint32_t as_int;
} vimv1_r05_t;
#define VIMv1_R05_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union vimv1_r06{
  struct{
    unsigned C_HSCAN_BITEN		: 12;
  };
  uint32_t as_int;
} vimv1_r06_t;
#define VIMv1_R06_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union vimv1_r07{
  struct{
    unsigned C_TMR_SLOWFAST		: 1;
    unsigned C_TMR_FASTDIV		: 1;
    unsigned R_TMR_PADMONITOR		: 1;
    unsigned R_TMR_DEBUGSLOW		: 1;
    unsigned R_TMR_DEBUGFAST		: 1;
    unsigned R_TMR_DEBUGDIV		: 1;
    unsigned R_TMR_PADTESTCLK		: 1;
    unsigned R_TMR_MASTEREN		: 1;
  };
  uint32_t as_int;
} vimv1_r07_t;
#define VIMv1_R07_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union vimv1_r08{
  struct{
    unsigned R_TMR_DIVRATIO		: 3;
    unsigned R_TMR_FASTOSCSPEED		: 4;
    unsigned R_TMR_SLOWOSCSPEED		: 4;
  };
  uint32_t as_int;
} vimv1_r08_t;
#define VIMv1_R08_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union vimv1_r09{
  struct{
    unsigned C_PMU_PGP_EN		: 1;
    unsigned C_PMU_PGA_EN		: 1;
    unsigned C_PMU_IREF_ENABLE		: 1;
    unsigned C_PMU_IREF_BIASEN		: 1;
    unsigned C_PMU_IVREFIDLE_ENABLE		: 1;
    unsigned C_PMU_IVREFIDLE_CAPCONNECT		: 1;
    unsigned P_PMU_IVREFIDLE_START		: 1;
  };
  uint32_t as_int;
} vimv1_r09_t;
#define VIMv1_R09_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union vimv1_r0A{
  struct{
    unsigned R_PMU_PGP_STRSEL		: 4;
    unsigned R_PMU_PGA_STRSEL		: 4;
  };
  uint32_t as_int;
} vimv1_r0A_t;
#define VIMv1_R0A_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union vimv1_r0B{
  struct{
    unsigned R_PMU_IREF_CTRL0		: 12;
  };
  uint32_t as_int;
} vimv1_r0B_t;
#define VIMv1_R0B_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union vimv1_r0C{
  struct{
    unsigned R_PMU_IREF_CTRL1		: 12;
  };
  uint32_t as_int;
} vimv1_r0C_t;
#define VIMv1_R0C_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
typedef union vimv1_r0D{
  struct{
    unsigned R_PMU_IREF_CTRL2		: 12;
  };
  uint32_t as_int;
} vimv1_r0D_t;
#define VIMv1_R0D_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E
typedef union vimv1_r0E{
  struct{
    unsigned R_PMU_IREF_CTRL3		: 9;
  };
  uint32_t as_int;
} vimv1_r0E_t;
#define VIMv1_R0E_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union vimv1_r0F{
  struct{
    unsigned C_PMU_NCHG_TIEHIGH		: 1;
    unsigned C_PMU_NCHG_CLKEN		: 1;
    unsigned C_PMU_DBR_TIELOW		: 1;
    unsigned C_PMU_DBR_CLKEN		: 1;
    unsigned C_PMU_DBR_BYPASS		: 1;
  };
  uint32_t as_int;
} vimv1_r0F_t;
#define VIMv1_R0F_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
typedef union vimv1_r10{
  struct{
    unsigned C_PMU_LDOA_TIELOW		: 1;
    unsigned C_PMU_LDOA_TIEHIGH		: 1;
    unsigned C_PMU_LDOA_SLOWEN		: 1;
    unsigned C_PMU_LDOA_SLOWCONN		: 1;
    unsigned C_PMU_LDOA_SLOWBIASEN		: 1;
    unsigned C_PMU_LDOA_NORLOADEN		: 1;
    unsigned C_PMU_LDOA_NOREN		: 1;
    unsigned C_PMU_LDOA_NORBIASEN		: 1;
    unsigned C_PMU_LDOA_NORBIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r10_t;
#define VIMv1_R10_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union vimv1_r11{
  struct{
    unsigned R_PMU_LDOA_NORPGSEL		: 3;
    unsigned R_PMU_LDOA_NORCOMPCAP		: 3;
    unsigned R_PMU_LDOA_NORBIASSEL		: 4;
  };
  uint32_t as_int;
} vimv1_r11_t;
#define VIMv1_R11_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union vimv1_r12{
  struct{
    unsigned R_PMU_LDOA_VADCSEL		: 4;
    unsigned R_PMU_LDOA_NORLOADSEL		: 4;
  };
  uint32_t as_int;
} vimv1_r12_t;
#define VIMv1_R12_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r12_t) == 4, "Punned Structure Size");

// Register 0x13
typedef union vimv1_r13{
  struct{
    unsigned C_PMU_LDOP_TIELOW		: 1;
    unsigned C_PMU_LDOP_TIEHIGH		: 1;
    unsigned C_PMU_LDOP_LOADEN		: 1;
    unsigned C_PMU_LDOP_BIASEN		: 1;
    unsigned C_PMU_LDOP_BIASCAPCONN		: 1;
    unsigned C_PMU_LDOP_AMPEN		: 1;
    unsigned C_PMU_LDOH_TIELOW		: 1;
    unsigned C_PMU_LDOH_TIEHIGH		: 1;
    unsigned C_PMU_LDOH_NORBIASCAPCONN		: 1;
    unsigned C_PMU_LDOH_EN		: 1;
    unsigned C_PMU_LDOH_BIASEN		: 1;
  };
  uint32_t as_int;
} vimv1_r13_t;
#define VIMv1_R13_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union vimv1_r14{
  struct{
    unsigned R_PMU_LDOH_LOADSEL		: 4;
    unsigned R_PMU_LDOH_FBSEL		: 4;
    unsigned R_PMU_LDOH_COMPCAP		: 2;
  };
  uint32_t as_int;
} vimv1_r14_t;
#define VIMv1_R14_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union vimv1_r15{
  struct{
    unsigned R_PMU_LDOP_LOADSEL		: 3;
    unsigned R_PMU_LDOP_COMPCAP		: 3;
    unsigned R_PMU_LDOP_BIASSEL		: 4;
  };
  uint32_t as_int;
} vimv1_r15_t;
#define VIMv1_R15_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r15_t) == 4, "Punned Structure Size");

// Register 0x16
typedef union vimv1_r16{
  struct{
    unsigned R_PMU_LDOP_FBSEL		: 4;
  };
  uint32_t as_int;
} vimv1_r16_t;
#define VIMv1_R16_DEFAULT {{0x0}}
_Static_assert(sizeof(vimv1_r16_t) == 4, "Punned Structure Size");

// Register 0x17
typedef union vimv1_r17{
  struct{
    unsigned C_PMU_LDORGDL_TIELOW		: 1;
    unsigned C_PMU_LDORGDL_TIEHIGH		: 1;
    unsigned C_PMU_LDORGDL_SLOWEN		: 1;
    unsigned C_PMU_LDORGDL_SLOWCONN		: 1;
    unsigned C_PMU_LDORGDL_NOREN		: 1;
    unsigned C_PMU_LDON_SLOWBIASEN		: 1;
    unsigned C_PMU_LDON_NVREFEN		: 1;
    unsigned C_PMU_LDON_NVREFBIASCAPCONN		: 1;
    unsigned C_PMU_LDON_NORBIASEN		: 1;
    unsigned C_PMU_LDON_NORBIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r17_t;
#define VIMv1_R17_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r17_t) == 4, "Punned Structure Size");

// Register 0x18
typedef union vimv1_r18{
  struct{
    unsigned C_PMU_LDOTGL_TIELOW		: 1;
    unsigned C_PMU_LDOTGL_TIEHIGH		: 1;
    unsigned C_PMU_LDOTGL_SLOWEN		: 1;
    unsigned C_PMU_LDOTGL_SLOWCONN		: 1;
    unsigned C_PMU_LDOTGL_NOREN		: 1;
    unsigned C_PMU_LDORGL_TIELOW		: 1;
    unsigned C_PMU_LDORGL_TIEHIGH		: 1;
    unsigned C_PMU_LDORGL_SLOWEN		: 1;
    unsigned C_PMU_LDORGL_SLOWCONN		: 1;
    unsigned C_PMU_LDORGL_NOREN		: 1;
  };
  uint32_t as_int;
} vimv1_r18_t;
#define VIMv1_R18_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r18_t) == 4, "Punned Structure Size");

// Register 0x19
typedef union vimv1_r19{
  struct{
    unsigned R_PMU_LDOTGL_LOADSEL		: 3;
    unsigned R_PMU_LDOTGL_COMPCAP		: 3;
    unsigned R_PMU_LDORGL_LOADSEL		: 3;
    unsigned R_PMU_LDORGL_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r19_t;
#define VIMv1_R19_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r19_t) == 4, "Punned Structure Size");

// Register 0x1A
typedef union vimv1_r1A{
  struct{
    unsigned R_PMU_LDON_VRGDLSEL		: 5;
  };
  uint32_t as_int;
} vimv1_r1A_t;
#define VIMv1_R1A_DEFAULT {{0x00}}
_Static_assert(sizeof(vimv1_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B
typedef union vimv1_r1B{
  struct{
    unsigned R_PMU_LDON_VTGLSEL		: 5;
    unsigned R_PMU_LDON_VRGLSEL		: 5;
  };
  uint32_t as_int;
} vimv1_r1B_t;
#define VIMv1_R1B_DEFAULT {{0x00, 0x00}}
_Static_assert(sizeof(vimv1_r1B_t) == 4, "Punned Structure Size");

// Register 0x1C
typedef union vimv1_r1C{
  struct{
    unsigned C_BUF_ADCCAS_TIELOW		: 1;
    unsigned C_BUF_ADCCAS_TIEHIGH		: 1;
    unsigned C_BUF_ADCCAS_EN		: 1;
    unsigned C_BUF_ADCCAS_BYPASS		: 1;
    unsigned C_BUF_ADCBIAS_VREFEN		: 1;
    unsigned C_BUF_ADCBIAS_VREFCAPCONN		: 1;
    unsigned C_BUF_ADCBIAS_TIELOW		: 1;
    unsigned C_BUF_ADCBIAS_TIEHIGH		: 1;
    unsigned C_BUF_ADCBIAS_EN		: 1;
    unsigned C_BUF_ADCBIAS_BYPASS		: 1;
    unsigned C_BUF_ADCBIAS_BIASEN		: 1;
    unsigned C_BUF_ADCBIAS_BIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r1C_t;
#define VIMv1_R1C_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r1C_t) == 4, "Punned Structure Size");

// Register 0x1D
typedef union vimv1_r1D{
  struct{
    unsigned R_BUF_ADCCAS_PGSEL		: 3;
    unsigned R_BUF_ADCCAS_COMPCAP		: 3;
    unsigned R_BUF_ADCBIAS_PGSEL		: 3;
    unsigned R_BUF_ADCBIAS_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r1D_t;
#define VIMv1_R1D_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r1D_t) == 4, "Punned Structure Size");

// Register 0x1E
typedef union vimv1_r1E{
  struct{
    unsigned C_BUF_PIXCAS_TIELOW		: 1;
    unsigned C_BUF_PIXCAS_TIEHIGH		: 1;
    unsigned C_BUF_PIXCAS_EN		: 1;
    unsigned C_BUF_PIXCAS_BYPASS		: 1;
    unsigned C_BUF_PIXBIAS_VREFEN		: 1;
    unsigned C_BUF_PIXBIAS_VREFCAPCONN		: 1;
    unsigned C_BUF_PIXBIAS_TIELOW		: 1;
    unsigned C_BUF_PIXBIAS_TIEHIGH		: 1;
    unsigned C_BUF_PIXBIAS_EN		: 1;
    unsigned C_BUF_PIXBIAS_BYPASS		: 1;
    unsigned C_BUF_PIXBIAS_BIASEN		: 1;
    unsigned C_BUF_PIXBIAS_BIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r1E_t;
#define VIMv1_R1E_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r1E_t) == 4, "Punned Structure Size");

// Register 0x1F
typedef union vimv1_r1F{
  struct{
    unsigned R_BUF_PIXCAS_PGSEL		: 3;
    unsigned R_BUF_PIXCAS_COMPCAP		: 3;
    unsigned R_BUF_PIXBIAS_PGSEL		: 3;
    unsigned R_BUF_PIXBIAS_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r1F_t;
#define VIMv1_R1F_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r1F_t) == 4, "Punned Structure Size");

// Register 0x20
typedef union vimv1_r20{
  struct{
    unsigned C_BUF_CCDAC_SAMPLE		: 1;
    unsigned C_BUF_CCDAC_CONNVSS		: 1;
    unsigned C_BUF_CCDAC_CONNVDD		: 1;
    unsigned C_BUF_CC_TIELOW		: 1;
    unsigned C_BUF_CC_TIEHIGH		: 1;
    unsigned C_BUF_CC_EN		: 1;
    unsigned C_BUF_CC_BIASEN		: 1;
    unsigned C_BUF_CC_BIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r20_t;
#define VIMv1_R20_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r20_t) == 4, "Punned Structure Size");

// Register 0x21
typedef union vimv1_r21{
  struct{
    unsigned R_BUF_CC_PGSEL		: 4;
    unsigned R_BUF_CC_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r21_t;
#define VIMv1_R21_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r21_t) == 4, "Punned Structure Size");

// Register 0x22
typedef union vimv1_r22{
  struct{
    unsigned R_BUF_CCDAC_CODE		: 7;
  };
  uint32_t as_int;
} vimv1_r22_t;
#define VIMv1_R22_DEFAULT {{0x00}}
_Static_assert(sizeof(vimv1_r22_t) == 4, "Punned Structure Size");

// Register 0x23
typedef union vimv1_r23{
  struct{
    unsigned C_BUF_PDC_TIELOW		: 1;
    unsigned C_BUF_PDC_TIEHIGH		: 1;
    unsigned C_BUF_PDC_PINPUTEN		: 1;
    unsigned C_BUF_PDC_NINPUTEN		: 1;
    unsigned C_BUF_PDC_EN		: 1;
    unsigned C_BUF_TRANS_DACSAMPLE		: 1;
    unsigned C_BUF_TRANS_DACCONNVSS		: 1;
    unsigned C_BUF_TRANS_DACCONNVDD		: 1;
    unsigned C_BUF_TRANS_BIASEN		: 1;
    unsigned C_BUF_TRANS_BIASCAPCONN		: 1;
  };
  uint32_t as_int;
} vimv1_r23_t;
#define VIMv1_R23_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r23_t) == 4, "Punned Structure Size");

// Register 0x24
typedef union vimv1_r24{
  struct{
    unsigned C_BUF_PU_TIELOW		: 1;
    unsigned C_BUF_PU_TIEHIGH		: 1;
    unsigned C_BUF_PU_PINPUTEN		: 1;
    unsigned C_BUF_PU_NINPUTEN		: 1;
    unsigned C_BUF_PU_EN		: 1;
    unsigned C_BUF_PDF_TIELOW		: 1;
    unsigned C_BUF_PDF_TIEHIGH		: 1;
    unsigned C_BUF_PDF_PINPUTEN		: 1;
    unsigned C_BUF_PDF_NINPUTEN		: 1;
    unsigned C_BUF_PDF_EN		: 1;
  };
  uint32_t as_int;
} vimv1_r24_t;
#define VIMv1_R24_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r24_t) == 4, "Punned Structure Size");

// Register 0x25
typedef union vimv1_r25{
  struct{
    unsigned R_BUF_PDC_CODE		: 7;
  };
  uint32_t as_int;
} vimv1_r25_t;
#define VIMv1_R25_DEFAULT {{0x00}}
_Static_assert(sizeof(vimv1_r25_t) == 4, "Punned Structure Size");

// Register 0x26
typedef union vimv1_r26{
  struct{
    unsigned R_BUF_PDF_CODE		: 7;
  };
  uint32_t as_int;
} vimv1_r26_t;
#define VIMv1_R26_DEFAULT {{0x00}}
_Static_assert(sizeof(vimv1_r26_t) == 4, "Punned Structure Size");

// Register 0x27
typedef union vimv1_r27{
  struct{
    unsigned R_BUF_PU_CODE		: 7;
  };
  uint32_t as_int;
} vimv1_r27_t;
#define VIMv1_R27_DEFAULT {{0x00}}
_Static_assert(sizeof(vimv1_r27_t) == 4, "Punned Structure Size");

// Register 0x28
typedef union vimv1_r28{
  struct{
    unsigned R_BUF_PDC_PGSEL		: 4;
    unsigned R_BUF_PDC_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r28_t;
#define VIMv1_R28_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r28_t) == 4, "Punned Structure Size");

// Register 0x29
typedef union vimv1_r29{
  struct{
    unsigned R_BUF_PDF_PGSEL		: 4;
    unsigned R_BUF_PDF_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r29_t;
#define VIMv1_R29_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r29_t) == 4, "Punned Structure Size");

// Register 0x2A
typedef union vimv1_r2A{
  struct{
    unsigned R_BUF_PU_PGSEL		: 4;
    unsigned R_BUF_PU_COMPCAP		: 3;
  };
  uint32_t as_int;
} vimv1_r2A_t;
#define VIMv1_R2A_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r2A_t) == 4, "Punned Structure Size");

// Register 0x2B
typedef union vimv1_r2B{
  struct{
    unsigned RDSH_IN_EREG		: 1;
    unsigned SHSH_IN_EREG		: 1;
    unsigned BSHSH_IN_EREG		: 1;
    unsigned PT_RDV_SHCLK_EREG		: 1;
    unsigned H_ACC_IN_EREG		: 1;
    unsigned PT_ACC_CLK_EREG		: 1;
    unsigned H_HSCANCSEL_IN_EREG		: 1;
    unsigned PT_HSCAN_CSELCLK_EREG		: 1;
    unsigned DGEN_BYPASS_SOURCE		: 1;
    unsigned DGEN_BYPASS		: 1;
  };
  uint32_t as_int;
} vimv1_r2B_t;
#define VIMv1_R2B_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r2B_t) == 4, "Punned Structure Size");

// Register 0x2C
// -- READ-ONLY --

// Register 0x2D
typedef union vimv1_r2D{
  struct{
    unsigned ADC_CLK_PERIOD		: 12;
  };
  uint32_t as_int;
} vimv1_r2D_t;
#define VIMv1_R2D_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r2D_t) == 4, "Punned Structure Size");

// Register 0x2E
typedef union vimv1_r2E{
  struct{
    unsigned ADC_CLK_NUM_PULSE		: 12;
  };
  uint32_t as_int;
} vimv1_r2E_t;
#define VIMv1_R2E_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r2E_t) == 4, "Punned Structure Size");

// Register 0x2F
typedef union vimv1_r2F{
  struct{
    unsigned RDV_CLK_PERIOD		: 12;
  };
  uint32_t as_int;
} vimv1_r2F_t;
#define VIMv1_R2F_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r2F_t) == 4, "Punned Structure Size");

// Register 0x30
typedef union vimv1_r30{
  struct{
    unsigned RDV_CLK_NUM_PULSE		: 12;
  };
  uint32_t as_int;
} vimv1_r30_t;
#define VIMv1_R30_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r30_t) == 4, "Punned Structure Size");

// Register 0x31
typedef union vimv1_r31{
  struct{
    unsigned ACC_CLK_PERIOD		: 12;
  };
  uint32_t as_int;
} vimv1_r31_t;
#define VIMv1_R31_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r31_t) == 4, "Punned Structure Size");

// Register 0x32
typedef union vimv1_r32{
  struct{
    unsigned ACC_CLK_NUM_PULSE		: 12;
  };
  uint32_t as_int;
} vimv1_r32_t;
#define VIMv1_R32_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r32_t) == 4, "Punned Structure Size");

// Register 0x33
typedef union vimv1_r33{
  struct{
    unsigned ACC_DATA_LPERIOD		: 6;
    unsigned ACC_DATA_HPERIOD		: 6;
  };
  uint32_t as_int;
} vimv1_r33_t;
#define VIMv1_R33_DEFAULT {{0x00, 0x00}}
_Static_assert(sizeof(vimv1_r33_t) == 4, "Punned Structure Size");

// Register 0x34
typedef union vimv1_r34{
  struct{
    unsigned ACC_DATA_NUM_PULSE		: 12;
  };
  uint32_t as_int;
} vimv1_r34_t;
#define VIMv1_R34_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r34_t) == 4, "Punned Structure Size");

// Register 0x35
typedef union vimv1_r35{
  struct{
    unsigned DCNT_BITSHIFT		: 4;
    unsigned DCNT_SIGNED		: 1;
    unsigned DCNT_EN		: 1;
  };
  uint32_t as_int;
} vimv1_r35_t;
#define VIMv1_R35_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r35_t) == 4, "Punned Structure Size");

// Register 0x36
typedef union vimv1_r36{
  struct{
    unsigned DSTR_DATAPACKING		: 3;
    unsigned DSTR_DIV		: 3;
    unsigned DSTR_EDGE		: 1;
    unsigned DSTR_PADSETEN		: 2;
    unsigned DSTR_EN		: 1;
  };
  uint32_t as_int;
} vimv1_r36_t;
#define VIMv1_R36_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r36_t) == 4, "Punned Structure Size");

// Register 0x37
typedef union vimv1_r37{
  struct{
    unsigned DATAGEN_RESET		: 1;
    unsigned DATAGEN_CLKGATE		: 1;
    unsigned CTRL_CLKGATE		: 1;
    unsigned HALT_WHEN_MBUS_STREAMING		: 1;
    unsigned HALT_UNTIL		: 2;
  };
  uint32_t as_int;
} vimv1_r37_t;
#define VIMv1_R37_DEFAULT {{0x1, 0x1, 0x0, 0x1, 0x0}}
_Static_assert(sizeof(vimv1_r37_t) == 4, "Punned Structure Size");

// Register 0x38
typedef union vimv1_r38{
  struct{
    unsigned HSYNC		: 1;
    unsigned VSYNC		: 1;
  };
  uint32_t as_int;
} vimv1_r38_t;
#define VIMv1_R38_DEFAULT {{0x0, 0x0}}
_Static_assert(sizeof(vimv1_r38_t) == 4, "Punned Structure Size");

// Register 0x39
typedef union vimv1_r39{
  struct{
    unsigned MBUS_STR_ADDR		: 8;
  };
  uint32_t as_int;
} vimv1_r39_t;
#define VIMv1_R39_DEFAULT {{0x14}}
_Static_assert(sizeof(vimv1_r39_t) == 4, "Punned Structure Size");

// Register 0x3A
typedef union vimv1_r3A{
  struct{
    unsigned MBUS_STR_LEN_1		: 10;
  };
  uint32_t as_int;
} vimv1_r3A_t;
#define VIMv1_R3A_DEFAULT {{0x18F}}
_Static_assert(sizeof(vimv1_r3A_t) == 4, "Punned Structure Size");

// Register 0x3B
typedef union vimv1_r3B{
  struct{
    unsigned IRQ_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} vimv1_r3B_t;
#define VIMv1_R3B_DEFAULT {{0x10}}
_Static_assert(sizeof(vimv1_r3B_t) == 4, "Punned Structure Size");

// Register 0x3C
typedef union vimv1_r3C{
  struct{
    unsigned IRQ_REG_ADDR		: 8;
  };
  uint32_t as_int;
} vimv1_r3C_t;
#define VIMv1_R3C_DEFAULT {{0x07}}
_Static_assert(sizeof(vimv1_r3C_t) == 4, "Punned Structure Size");

// Register 0x3D
typedef union vimv1_r3D{
  struct{
    unsigned IRQ_PAYLOAD_LOWER		: 12;
  };
  uint32_t as_int;
} vimv1_r3D_t;
#define VIMv1_R3D_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r3D_t) == 4, "Punned Structure Size");

// Register 0x3E
typedef union vimv1_r3E{
  struct{
    unsigned IRQ_PAYLOAD_UPPER		: 12;
  };
  uint32_t as_int;
} vimv1_r3E_t;
#define VIMv1_R3E_DEFAULT {{0x000}}
_Static_assert(sizeof(vimv1_r3E_t) == 4, "Punned Structure Size");

// Register 0x3F
// -- EMPTY --

// Register 0x40
typedef union vimv1_r40{
  struct{
    unsigned ENABLE_LC_MEM		: 1;
    unsigned ENABLE_DEBUG		: 1;
    unsigned DEBUG_CLK_SOURCE		: 1;
  };
  uint32_t as_int;
} vimv1_r40_t;
#define VIMv1_R40_DEFAULT {{0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r40_t) == 4, "Punned Structure Size");

// Register 0x41
typedef union vimv1_r41{
  struct{
    unsigned CTRL_SLEEP		: 1;
    unsigned CTRL_ISOLATE		: 1;
    unsigned CTRL_RESET		: 1;
  };
  uint32_t as_int;
} vimv1_r41_t;
#define VIMv1_R41_DEFAULT {{0x1, 0x1, 0x1}}
_Static_assert(sizeof(vimv1_r41_t) == 4, "Punned Structure Size");

// Register 0x42
// -- READ-ONLY --

// Register 0x43
typedef union vimv1_r43{
  struct{
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 2;
    unsigned NOT_DEFINED_67_4		: 1;
    unsigned NOT_DEFINED_67_5		: 1;
    unsigned NOT_DEFINED_67_6		: 1;
    unsigned NOT_DEFINED_67_7		: 1;
    unsigned MBUS_IGNORE_RX_FAIL		: 1;
  };
  uint32_t as_int;
} vimv1_r43_t;
#define VIMv1_R43_DEFAULT {{0x1, 0x2, 0x0, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(vimv1_r43_t) == 4, "Punned Structure Size");

// Register 0x44
// -- MEMORY-MAPPED --

// Register 0x45
// -- EMPTY --

// Register 0x46
// -- EMPTY --

// Register 0x47
// -- EMPTY --

// Register 0x48
// -- EMPTY --

// Register 0x49
// -- EMPTY --

// Register 0x4A
// -- EMPTY --

// Register 0x4B
// -- EMPTY --

// Register 0x4C
// -- EMPTY --

// Register 0x4D
// -- EMPTY --

// Register 0x4E
// -- EMPTY --

// Register 0x4F
typedef union vimv1_r4F{
  struct{
    unsigned CLK_DEBUG		: 1;
  };
  uint32_t as_int;
} vimv1_r4F_t;
#define VIMv1_R4F_DEFAULT {{0x0}}
_Static_assert(sizeof(vimv1_r4F_t) == 4, "Punned Structure Size");

// Register 0x50
// -- READ-ONLY --

// Register 0x51
// -- READ-ONLY --

// Register 0x52
// -- READ-ONLY --

// Register 0x53
// -- READ-ONLY --

// Register 0x54
// -- READ-ONLY --

// Register 0x55
// -- READ-ONLY --

// Register 0x56
// -- READ-ONLY --

// Register 0x57
// -- READ-ONLY --

// Register 0x58
// -- READ-ONLY --

// Register 0x59
// -- READ-ONLY --

// Register 0x5A
// -- READ-ONLY --

// Register 0x5B
// -- READ-ONLY --

// Register 0x5C
// -- READ-ONLY --

// Register 0x5D
// -- EMPTY --

// Register 0x5E
// -- EMPTY --

// Register 0x5F
// -- EMPTY --

// Register 0x60
// -- EMPTY --

// Register 0x61
// -- EMPTY --

// Register 0x62
// -- EMPTY --

// Register 0x63
// -- EMPTY --

// Register 0x64
// -- EMPTY --

// Register 0x65
// -- EMPTY --

// Register 0x66
// -- EMPTY --

// Register 0x67
// -- EMPTY --

// Register 0x68
// -- EMPTY --

// Register 0x69
// -- EMPTY --

// Register 0x6A
// -- EMPTY --

// Register 0x6B
// -- EMPTY --

// Register 0x6C
// -- EMPTY --

// Register 0x6D
// -- EMPTY --

// Register 0x6E
// -- EMPTY --

// Register 0x6F
// -- EMPTY --

// Register 0x70
// -- EMPTY --

// Register 0x71
// -- EMPTY --

// Register 0x72
// -- EMPTY --

// Register 0x73
typedef union vimv1_r73{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    unsigned NOT_DEFINED_115_20		: 1;
    unsigned NOT_DEFINED_115_21		: 1;
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} vimv1_r73_t;
#define VIMv1_R73_DEFAULT {{0x00000, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(vimv1_r73_t) == 4, "Punned Structure Size");

// Register 0x74
// -- EMPTY --

// Register 0x75
// -- EMPTY --

// Register 0x76
// -- EMPTY --

// Register 0x77
// -- EMPTY --

// Register 0x78
// -- EMPTY --

// Register 0x79
// -- EMPTY --

// Register 0x7A
// -- EMPTY --

// Register 0x7B
// -- EMPTY --

// Register 0x7C
// -- EMPTY --

// Register 0x7D
// -- EMPTY --

// Register 0x7E
// -- EMPTY --

// Register 0x7F
// -- EMPTY --

// Register 0x80
typedef union vimv1_r80{
  struct{
    unsigned NOT_DEFINED_128_0		: 1;
    unsigned NOT_DEFINED_128_1		: 1;
    unsigned NOT_DEFINED_128_2		: 1;
    unsigned NOT_DEFINED_128_3		: 1;
    unsigned NOT_DEFINED_128_4		: 1;
    unsigned NOT_DEFINED_128_5		: 1;
    unsigned NOT_DEFINED_128_6		: 1;
    unsigned NOT_DEFINED_128_7		: 1;
    unsigned NOT_DEFINED_128_8		: 1;
    unsigned NOT_DEFINED_128_9		: 1;
    unsigned NOT_DEFINED_128_10		: 1;
    unsigned NOT_DEFINED_128_11		: 1;
    unsigned NOT_DEFINED_128_12		: 1;
    unsigned NOT_DEFINED_128_13		: 1;
    unsigned NOT_DEFINED_128_14		: 1;
    unsigned NOT_DEFINED_128_15		: 1;
    unsigned NOT_DEFINED_128_16		: 1;
    unsigned NOT_DEFINED_128_17		: 1;
    unsigned NOT_DEFINED_128_18		: 1;
    unsigned NOT_DEFINED_128_19		: 1;
    unsigned NOT_DEFINED_128_20		: 1;
    unsigned NOT_DEFINED_128_21		: 1;
    unsigned NOT_DEFINED_128_22		: 1;
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} vimv1_r80_t;
#define VIMv1_R80_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(vimv1_r80_t) == 4, "Punned Structure Size");

#endif // VIMV1_RF_H