//************************************************************
// Desciption: ADOv6VB Register File Header File
//      Generated by genRF (Version 1.22) 06/22/2019 00:20:51
//************************************************************

#ifndef ADOv6VB_RF_H
#define ADOv6VB_RF_H

// Register 0x00
typedef union adov6vb_r00{
  struct{
    unsigned DSP_SD_EN		: 1;
    unsigned DSP_ACCM_CTRL_EN		: 1;
    unsigned DSP_N_FE		: 3;
    unsigned DSP_N_DCT		: 3;
    unsigned DSP_N_FFT		: 3;
    unsigned DSP_N_ACCM_DLY		: 3;
    unsigned DSP_DN_SAMP_EN		: 1;
    unsigned DSP_EN_GC		: 1;
    unsigned DSP_FE_SEL_EXT		: 1;
    unsigned DSP_FEAT_MON_EN		: 1;
    unsigned DSP_RF_MON_EN		: 1;
    unsigned DSP_DNN_CLK_S_DIV		: 2;
    unsigned DSP_DNN_CLK_S_RING		: 3;
  };
  uint32_t as_int;
} adov6vb_r00_t;
#define ADOv6VB_R00_DEFAULT {{0x0, 0x0, 0x2, 0x1, 0x3, 0x3, 0x0, 0x0, 0x0, 0x1, 0x1, 0x3, 0x4}}
_Static_assert(sizeof(adov6vb_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union adov6vb_r01{
  struct{
    unsigned DSP_SRAM_ADDR_BASE		: 12;
    unsigned DSP_SRAM_ADDR_BASE_HP		: 12;
  };
  uint32_t as_int;
} adov6vb_r01_t;
#define ADOv6VB_R01_DEFAULT {{0x0F0, 0x3E8}}
_Static_assert(sizeof(adov6vb_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union adov6vb_r02{
  struct{
    unsigned DSP_LFSR_TAP		: 8;
    unsigned DSP_ADO_GAIN		: 8;
    unsigned DSP_ADO_MAX_TONE_NUM		: 6;
    unsigned DSP_DNN_CLK_MON_EN		: 1;
    unsigned DSP_DNN_CLK_EXT_SEL		: 1;
  };
  uint32_t as_int;
} adov6vb_r02_t;
#define ADOv6VB_R02_DEFAULT {{0x65, 0x01, 0x10, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union adov6vb_r03{
  struct{
    unsigned DSP_SRAM1_TUNE_RDRSB		: 4;
    unsigned DSP_SRAM1_TUNE_WL_WIDTH		: 3;
    unsigned DSP_SRAM1_TUNE_DEC_DLY		: 5;
    unsigned DSP_SRAM0_TUNE_RDRSB		: 4;
    unsigned DSP_SRAM0_TUNE_WL_WIDTH		: 3;
    unsigned DSP_SRAM0_TUNE_DEC_DLY		: 5;
  };
  uint32_t as_int;
} adov6vb_r03_t;
#define ADOv6VB_R03_DEFAULT {{0x0, 0x2, 0x10, 0x0, 0x2, 0x10}}
_Static_assert(sizeof(adov6vb_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union adov6vb_r04{
  struct{
    unsigned DSP_ADO_POWER_TH		: 15;
    unsigned DSP_SRAM1_TUNE_RDRSB_EN		: 1;
    unsigned DSP_SRAM1_SA_SEL		: 1;
    unsigned DSP_SRAM0_TUNE_RDRSB_EN		: 1;
    unsigned DSP_SRAM0_SA_SEL		: 1;
    unsigned DSP_CLK_MON_SEL		: 3;
    unsigned DSP_P2S_RESETN		: 1;
    unsigned DSP_P2S_MON_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r04_t;
#define ADOv6VB_R04_DEFAULT {{0x0040, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union adov6vb_r05{
  struct{
    unsigned DSP_PHS_DATA_IN_FE		: 8;
  };
  uint32_t as_int;
} adov6vb_r05_t;
#define ADOv6VB_R05_DEFAULT {{0x00}}
_Static_assert(sizeof(adov6vb_r05_t) == 4, "Punned Structure Size");

// Register 0x06
typedef union adov6vb_r06{
  struct{
    unsigned DSP_PHS_WR_FE		: 1;
  };
  uint32_t as_int;
} adov6vb_r06_t;
#define ADOv6VB_R06_DEFAULT {{0x0}}
_Static_assert(sizeof(adov6vb_r06_t) == 4, "Punned Structure Size");

// Register 0x07
typedef union adov6vb_r07{
  struct{
    unsigned DSP_LUT_DATA_IN		: 3;
    unsigned DSP_LUT_DATA_IN_DUMMY		: 1;
    unsigned DSP_LUT_WR_ADDR		: 3;
    unsigned DSP_LUT_WR_ADDR_DUMMY		: 1;
  };
  uint32_t as_int;
} adov6vb_r07_t;
#define ADOv6VB_R07_DEFAULT {{0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union adov6vb_r08{
  struct{
    unsigned DSP_LUT_WR		: 1;
  };
  uint32_t as_int;
} adov6vb_r08_t;
#define ADOv6VB_R08_DEFAULT {{0x0}}
_Static_assert(sizeof(adov6vb_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union adov6vb_r09{
  struct{
    unsigned DSP_TH_DATA_IN		: 16;
  };
  uint32_t as_int;
} adov6vb_r09_t;
#define ADOv6VB_R09_DEFAULT {{0x0000}}
_Static_assert(sizeof(adov6vb_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union adov6vb_r0A{
  struct{
    unsigned DSP_TH_WR		: 1;
  };
  uint32_t as_int;
} adov6vb_r0A_t;
#define ADOv6VB_R0A_DEFAULT {{0x0}}
_Static_assert(sizeof(adov6vb_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union adov6vb_r0B{
  struct{
    unsigned DSP_PHS_DATA_IN_FS		: 10;
    unsigned DSP_PHS_DATA_IN_FS_DUMMY		: 2;
    unsigned DSP_PHS_WR_ADDR_FS		: 6;
    unsigned DSP_PHS_WR_ADDR_FS_DUMMY		: 2;
  };
  uint32_t as_int;
} adov6vb_r0B_t;
#define ADOv6VB_R0B_DEFAULT {{0x000, 0x0, 0x00, 0x0}}
_Static_assert(sizeof(adov6vb_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
typedef union adov6vb_r0C{
  struct{
    unsigned DSP_PHS_WR_FS		: 1;
  };
  uint32_t as_int;
} adov6vb_r0C_t;
#define ADOv6VB_R0C_DEFAULT {{0x0}}
_Static_assert(sizeof(adov6vb_r0C_t) == 4, "Punned Structure Size");

// Register 0x0D
typedef union adov6vb_r0D{
  struct{
    unsigned DSP_DNN_CTRL_RF_SEL		: 1;
    unsigned DSP_DNN_PG_SLEEP_RF		: 1;
    unsigned DSP_DNN_ISOLATEN_RF		: 1;
    unsigned DSP_DNN_CLKENB_RF		: 1;
    unsigned DSP_DNN_RESETN_RF		: 1;
    unsigned DSP_DNN_HP_MODE_EN		: 1;
    unsigned DSP_LP_RESETN		: 1;
    unsigned DSP_HP_RESETN		: 1;
    unsigned DSP_HP_DNN_GO		: 1;
    unsigned DSP_HP_ADO_GO		: 1;
    unsigned VAD_LNA_AMPSW_EN		: 1;
    unsigned REC_PGA_OUTSHORT_EN		: 1;
    unsigned REC_PGA_FSETTLE		: 1;
    unsigned REC_PGA_CMFB_FSETTLE		: 1;
    unsigned REC_PGA_AMPEN		: 1;
    unsigned REC_LNA_OUTSHORT_EN		: 1;
    unsigned REC_LNA_FSETTLE		: 1;
    unsigned REC_LNA_CMFB_FSETTLE		: 1;
    unsigned REC_LNA_AMPSW_EN		: 1;
    unsigned REC_LNA_AMPEN		: 1;
    unsigned REC_ADCDRI_EN		: 1;
    unsigned REC_ADC_RESETN		: 1;
    unsigned DSP_HP_FIFO_GO		: 1;
    unsigned DSP_DNN_CLKENB_RF_SEL		: 1;
  };
  uint32_t as_int;
} adov6vb_r0D_t;
#define ADOv6VB_R0D_DEFAULT {{0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(adov6vb_r0D_t) == 4, "Punned Structure Size");

// Register 0x0E
typedef union adov6vb_r0E{
  struct{
    unsigned DSP_DNN_EN_RF		: 1;
    unsigned DSP_DNN_EN_RF_SEL		: 1;
    unsigned DSP_DNN_DBG_MODE_EN		: 1;
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 2;
    unsigned DSP_WAKEUP_REQ_EN		: 1;
    unsigned DSP_MIX_MON_EN		: 1;
    unsigned DSP_MIX_EXT_SEL		: 1;
    unsigned DSP_MIX_INV_EN		: 1;
    unsigned WAKEUP_ON_PEND_REQ		: 1;
  };
  uint32_t as_int;
} adov6vb_r0E_t;
#define ADOv6VB_R0E_DEFAULT {{0x0, 0x0, 0x0, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r0E_t) == 4, "Punned Structure Size");

// Register 0x0F
typedef union adov6vb_r0F{
  struct{
    unsigned REC_ADC_CLK_TUNE		: 3;
    unsigned REC_ADC_OFFSET_SELP		: 3;
    unsigned REC_ADC_OFFSET_SELN		: 3;
    unsigned REC_ADC_EN_PURGE		: 1;
    unsigned VAD_ADC_RESET		: 1;
    unsigned VAD_ADC_OFFSET_SELP		: 3;
    unsigned VAD_ADC_OFFSET_SELN		: 3;
  };
  uint32_t as_int;
} adov6vb_r0F_t;
#define ADOv6VB_R0F_DEFAULT {{0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r0F_t) == 4, "Punned Structure Size");

// Register 0x10
typedef union adov6vb_r10{
  struct{
    unsigned VAD_ADC_DOUT_ISOL		: 1;
    unsigned DIO_DIR_IN1OUT0		: 1;
    unsigned DIO_IN_EN		: 1;
    unsigned DIO_OUT_EN		: 1;
    unsigned DO_LP_HP_SEL		: 1;
  };
  uint32_t as_int;
} adov6vb_r10_t;
#define ADOv6VB_R10_DEFAULT {{0x1, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r10_t) == 4, "Punned Structure Size");

// Register 0x11
typedef union adov6vb_r11{
  struct{
    unsigned LDO_CTRLB_IREF_IBIAS_1P4HP		: 4;
    unsigned LDO_CTRLB_IREF_IBIAS_1P4LP		: 4;
    unsigned LDO_CTRLB_IREF_IBIAS_0P9HP		: 4;
    unsigned LDO_CTRLB_IREF_IBIAS_0P6LP		: 4;
    unsigned LDO_CTRL_VREFLDO_VOUT_1P4HP		: 4;
    unsigned LDO_CTRLB_VREFLDO_I_1P4HP		: 4;
  };
  uint32_t as_int;
} adov6vb_r11_t;
#define ADOv6VB_R11_DEFAULT {{0x9, 0xC, 0xA, 0xC, 0x6, 0x8}}
_Static_assert(sizeof(adov6vb_r11_t) == 4, "Punned Structure Size");

// Register 0x12
typedef union adov6vb_r12{
  struct{
    unsigned LDO_CTRL_VREFLDO_VOUT_1P4LP		: 4;
    unsigned LDO_CTRLB_VREFLDO_I_1P4LP		: 4;
    unsigned LDO_CTRL_VREFLDO_VOUT_0P9HP		: 4;
    unsigned LDO_CTRLB_VREFLDO_I_0P9HP		: 4;
    unsigned LDO_CTRL_VREFLDO_VOUT_0P6LP		: 4;
    unsigned LDO_CTRLB_VREFLDO_I_0P6LP		: 4;
  };
  uint32_t as_int;
} adov6vb_r12_t;
#define ADOv6VB_R12_DEFAULT {{0x6, 0x8, 0x4, 0x8, 0x3, 0x8}}
_Static_assert(sizeof(adov6vb_r12_t) == 4, "Punned Structure Size");

// Register 0x13
typedef union adov6vb_r13{
  struct{
    unsigned LDO_PG_IREF		: 1;
    unsigned LDO_PG_LDOCORE_1P4HP		: 1;
    unsigned LDO_PG_VREF_1P4HP		: 1;
    unsigned LDO_PG_LDOCORE_1P4LP		: 1;
    unsigned LDO_PG_VREF_1P4LP		: 1;
    unsigned LDO_PG_LDOCORE_0P9HP		: 1;
    unsigned LDO_PG_VREF_0P9HP		: 1;
    unsigned LDO_PG_LDOCORE_0P6LP		: 1;
    unsigned LDO_PG_VREF_0P6LP		: 1;
    unsigned LDO_CTRL_STBCAP_LDOCORE_1P4HP		: 1;
    unsigned LDO_CTRL_STBCAP_LDOCORE_1P4LP		: 1;
    unsigned LDO_CTRL_STBCAP_LDOCORE_0P9HP		: 1;
    unsigned LDO_CTRL_STBCAP_LDOCORE_0P6LP		: 1;
    unsigned VAD_LNA_CMFB_FSETTLE		: 1;
    unsigned VAD_LNA_OUTSHORT_EN		: 1;
    unsigned VAD_LNA_FSETTLE		: 1;
    unsigned VAD_PGA_CMFB_FSETTLE		: 1;
    unsigned VAD_PGA_OUTSHORT_EN		: 1;
    unsigned VAD_PGA_FSETTLE		: 1;
  };
  uint32_t as_int;
} adov6vb_r13_t;
#define ADOv6VB_R13_DEFAULT {{0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1}}
_Static_assert(sizeof(adov6vb_r13_t) == 4, "Punned Structure Size");

// Register 0x14
typedef union adov6vb_r14{
  struct{
    unsigned VAD_PGA_GCON		: 5;
    unsigned VAD_PGA_CFBADD		: 1;
    unsigned VAD_PGA_BWCON		: 6;
    unsigned VAD_PGA_AMPEN		: 1;
    unsigned VAD_LNA_AMPEN		: 1;
    unsigned VAD_ADCDRI_EN		: 1;
    unsigned CP_VDOWN_1P2		: 1;
    unsigned CP_CLK_EN_1P2		: 1;
    unsigned CP_CLK_DIV_1P2		: 2;
  };
  uint32_t as_int;
} adov6vb_r14_t;
#define ADOv6VB_R14_DEFAULT {{0x01, 0x0, 0x00, 0x0, 0x0, 0x0, 0x1, 0x0, 0x3}}
_Static_assert(sizeof(adov6vb_r14_t) == 4, "Punned Structure Size");

// Register 0x15
typedef union adov6vb_r15{
  struct{
    unsigned REC_PGA_GCON		: 5;
    unsigned REC_PGA_CFBADD		: 1;
    unsigned REC_PGA_BWCON		: 9;
    unsigned LS_CLK_EN_1P2		: 1;
    unsigned LS_CLK_DIV_1P2		: 2;
    unsigned IB_GEN_FSETTLE		: 1;
    unsigned IB_GEN_CLK_EN		: 1;
    unsigned VAD_LNA_AMPMOD_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r15_t;
#define ADOv6VB_R15_DEFAULT {{0x01, 0x0, 0x000, 0x0, 0x3, 0x1, 0x0, 0x1}}
_Static_assert(sizeof(adov6vb_r15_t) == 4, "Punned Structure Size");

// Register 0x16
typedef union adov6vb_r16{
  struct{
    unsigned IBC_VAD_PGA		: 3;
    unsigned IBC_VAD_LNA		: 4;
    unsigned IBC_REC_PGA		: 4;
    unsigned IBC_REC_LNA		: 5;
    unsigned IBC_MONAMP		: 4;
    unsigned MIC_VIR_CBASE		: 2;
    unsigned REC_PGA_GCON_DSP_EN		: 1;
    unsigned VAD_PGA_GCON_DSP_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r16_t;
#define ADOv6VB_R16_DEFAULT {{0x2, 0x5, 0x5, 0x03, 0x5, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r16_t) == 4, "Punned Structure Size");

// Register 0x17
typedef union adov6vb_r17{
  struct{
    unsigned VAD_PGA_GCON_DSP		: 5;
    unsigned REC_PGA_GCON_DSP		: 5;
    unsigned REC_ADCDRI_I_N_CON		: 1;
    unsigned REC_ADCDRI_I_P_CON		: 5;
    unsigned REC_ADCDRI_OUT_OV_EN		: 1;
    unsigned REC_MONBUF_EN		: 1;
    unsigned REC_MONSEL		: 2;
    unsigned REC_REFMONBUF_EN		: 1;
    unsigned REC_REFMONSEL		: 3;
  };
  uint32_t as_int;
} adov6vb_r17_t;
#define ADOv6VB_R17_DEFAULT {{0x01, 0x01, 0x0, 0x10, 0x0, 0x0, 0x3, 0x0, 0x7}}
_Static_assert(sizeof(adov6vb_r17_t) == 4, "Punned Structure Size");

// Register 0x18
typedef union adov6vb_r18{
  struct{
    unsigned REC_LNA_P2_CON		: 6;
    unsigned REC_LNA_P1_CON		: 6;
    unsigned REC_LNA_N2_CON		: 6;
    unsigned REC_LNA_N1_CON		: 6;
  };
  uint32_t as_int;
} adov6vb_r18_t;
#define ADOv6VB_R18_DEFAULT {{0x08, 0x08, 0x07, 0x07}}
_Static_assert(sizeof(adov6vb_r18_t) == 4, "Punned Structure Size");

// Register 0x19
typedef union adov6vb_r19{
  struct{
    unsigned REC_PGA_P2_CON		: 5;
    unsigned REC_PGA_P1_CON		: 5;
    unsigned REC_PGA_N1_MCON		: 2;
    unsigned REC_PGA_N1_LCON		: 3;
    unsigned REC_PGA_OUT_OV_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r19_t;
#define ADOv6VB_R19_DEFAULT {{0x04, 0x04, 0x0, 0x7, 0x0}}
_Static_assert(sizeof(adov6vb_r19_t) == 4, "Punned Structure Size");

// Register 0x1A
typedef union adov6vb_r1A{
  struct{
    unsigned VAD_MONBUF_EN		: 1;
    unsigned VAD_MONSEL		: 2;
    unsigned VAD_REFMONBUF_EN		: 1;
    unsigned VAD_REFMONSEL		: 3;
    unsigned VAD_ADCDRI_OUT_OV_EN		: 1;
    unsigned VAD_ADCDRI_I_P_CON		: 5;
    unsigned VAD_ADCDRI_I_N_CON		: 1;
    unsigned VCM_PCON		: 3;
    unsigned VCM_NCON		: 3;
  };
  uint32_t as_int;
} adov6vb_r1A_t;
#define ADOv6VB_R1A_DEFAULT {{0x0, 0x3, 0x0, 0x7, 0x0, 0x1F, 0x1, 0x4, 0x4}}
_Static_assert(sizeof(adov6vb_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B
typedef union adov6vb_r1B{
  struct{
    unsigned VAD_LNA_P2_CON		: 5;
    unsigned VAD_LNA_P1_CON		: 5;
    unsigned VAD_LNA_N2_MCON		: 2;
    unsigned VAD_LNA_N2_LCON		: 3;
    unsigned VAD_LNA_N1_MCON		: 2;
    unsigned VAD_LNA_N1_LCON		: 3;
    unsigned BUF_OUT_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r1B_t;
#define ADOv6VB_R1B_DEFAULT {{0x07, 0x07, 0x0, 0x7, 0x0, 0x7, 0x1}}
_Static_assert(sizeof(adov6vb_r1B_t) == 4, "Punned Structure Size");

// Register 0x1C
typedef union adov6vb_r1C{
  struct{
    unsigned VAD_PGA_P2_MCON		: 2;
    unsigned VAD_PGA_P2_LCON		: 3;
    unsigned VAD_PGA_P1_MCON		: 2;
    unsigned VAD_PGA_P1_LCON		: 3;
    unsigned VAD_PGA_N1_MCON		: 2;
    unsigned VAD_PGA_N1_LCON		: 3;
    unsigned VAD_PGA_OUT_OV_EN		: 1;
    unsigned IB_CON2		: 4;
    unsigned IB_CON1		: 4;
  };
  uint32_t as_int;
} adov6vb_r1C_t;
#define ADOv6VB_R1C_DEFAULT {{0x0, 0x7, 0x0, 0x7, 0x0, 0x7, 0x0, 0x5, 0x4}}
_Static_assert(sizeof(adov6vb_r1C_t) == 4, "Punned Structure Size");

// Register 0x1D
// -- EMPTY --

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
// -- EMPTY --

// Register 0x21
// -- EMPTY --

// Register 0x22
// -- EMPTY --

// Register 0x23
// -- EMPTY --

// Register 0x24
// -- EMPTY --

// Register 0x25
// -- EMPTY --

// Register 0x26
// -- EMPTY --

// Register 0x27
// -- EMPTY --

// Register 0x28
// -- EMPTY --

// Register 0x29
// -- EMPTY --

// Register 0x2A
// -- EMPTY --

// Register 0x2B
// -- EMPTY --

// Register 0x2C
// -- EMPTY --

// Register 0x2D
// -- EMPTY --

// Register 0x2E
// -- EMPTY --

// Register 0x2F
typedef union adov6vb_r2F{
  struct{
    unsigned STR_WR_CH0_BUF_LEN		: 20;
    unsigned NOT_DEFINED_47_20		: 1;
    unsigned STR_WR_CH0_DBLB		: 1;
    unsigned STR_WR_CH0_WRP		: 1;
    unsigned STR_WR_CH0_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r2F_t;
#define ADOv6VB_R2F_DEFAULT {{0x00FFF, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(adov6vb_r2F_t) == 4, "Punned Structure Size");

// Register 0x30
typedef union adov6vb_r30{
  struct{
    unsigned STR_WR_CH0_BUF_OFF		: 20;
  };
  uint32_t as_int;
} adov6vb_r30_t;
#define ADOv6VB_R30_DEFAULT {{0x00000}}
_Static_assert(sizeof(adov6vb_r30_t) == 4, "Punned Structure Size");

// Register 0x31
// -- EMPTY --

// Register 0x32
// -- EMPTY --

// Register 0x33
typedef union adov6vb_r33{
  struct{
    unsigned BLK_WR_LENGTH_LIMIT		: 20;
    unsigned NOT_DEFINED_51_20		: 1;
    unsigned NOT_DEFINED_51_21		: 1;
    unsigned BLK_WR_CACT		: 1;
    unsigned BLK_WR_EN		: 1;
  };
  uint32_t as_int;
} adov6vb_r33_t;
#define ADOv6VB_R33_DEFAULT {{0x00000, 0x0, 0x0, 0x0, 0x1}}
_Static_assert(sizeof(adov6vb_r33_t) == 4, "Punned Structure Size");

// Register 0x34
// -- EMPTY --

// Register 0x35
// -- EMPTY --

// Register 0x36
// -- EMPTY --

// Register 0x37
// -- EMPTY --

// Register 0x38
// -- EMPTY --

// Register 0x39
// -- EMPTY --

// Register 0x3A
// -- EMPTY --

// Register 0x3B
// -- EMPTY --

// Register 0x3C
// -- EMPTY --

// Register 0x3D
// -- EMPTY --

// Register 0x3E
// -- EMPTY --

// Register 0x3F
// -- EMPTY --

// Register 0x40
typedef union adov6vb_r40{
  struct{
    unsigned NOT_DEFINED_64_0		: 1;
    unsigned NOT_DEFINED_64_1		: 1;
    unsigned NOT_DEFINED_64_2		: 1;
    unsigned NOT_DEFINED_64_3		: 1;
    unsigned NOT_DEFINED_64_4		: 1;
    unsigned NOT_DEFINED_64_5		: 1;
    unsigned NOT_DEFINED_64_6		: 1;
    unsigned NOT_DEFINED_64_7		: 1;
    unsigned NOT_DEFINED_64_8		: 1;
    unsigned NOT_DEFINED_64_9		: 1;
    unsigned NOT_DEFINED_64_10		: 1;
    unsigned NOT_DEFINED_64_11		: 1;
    unsigned NOT_DEFINED_64_12		: 1;
    unsigned NOT_DEFINED_64_13		: 1;
    unsigned NOT_DEFINED_64_14		: 1;
    unsigned NOT_DEFINED_64_15		: 1;
    unsigned NOT_DEFINED_64_16		: 1;
    unsigned NOT_DEFINED_64_17		: 1;
    unsigned NOT_DEFINED_64_18		: 1;
    unsigned NOT_DEFINED_64_19		: 1;
    unsigned NOT_DEFINED_64_20		: 1;
    unsigned NOT_DEFINED_64_21		: 1;
    unsigned NOT_DEFINED_64_22		: 1;
    unsigned ACT_RST		: 1;
  };
  uint32_t as_int;
} adov6vb_r40_t;
#define ADOv6VB_R40_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}
_Static_assert(sizeof(adov6vb_r40_t) == 4, "Punned Structure Size");

#endif // ADOv6VB_RF_H
