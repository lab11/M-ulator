//************************************************************
// Desciption: SNT Register File Header File
//      Generated by genRF (Version 1.50) 06/22/2022 17:07:48
//************************************************************

//*******************************************************************************************
// This file has been modified as below
//  - Prefix sntv6 is replaced by snt
//  - Prefix SNTv6 is replaced by SNT
//-------------------------------------------------------------------------------------------
//  Jan 05 2023 -   First commit 
//  Yejoong Kim (yejoong@cubeworks.io)
//*******************************************************************************************

#ifndef SNTV6_RF_H
#define SNTV6_RF_H

// Register 0x00
typedef union snt_r00{
  struct{
    unsigned LDO_EN_LDO		: 1;
    unsigned LDO_EN_IREF		: 1;
    unsigned LDO_EN_VREF		: 1;
    unsigned LDO_SEL_VOUT		: 3;
    unsigned LDO_VREF_I_AMP		: 4;
  };
  uint32_t as_int;
} snt_r00_t;
#define SNT_R00_DEFAULT {{0x0, 0x0, 0x0, 0x4, 0x0}}
#define SNT_R00_DEFAULT_AS_INT 0x000020
_Static_assert(sizeof(snt_r00_t) == 4, "Punned Structure Size");

// Register 0x01
typedef union snt_r01{
  struct{
    unsigned TSNS_RESETn		: 1;
    unsigned TSNS_ISOLATE		: 1;
    unsigned TSNS_SEL_V1P2		: 1;
    unsigned TSNS_SEL_LDO		: 1;
    unsigned TSNS_EN_SENSOR_V1P2		: 1;
    unsigned TSNS_EN_SENSOR_LDO		: 1;
    unsigned TSNS_BURST_MODE		: 1;
    unsigned TSNS_CONT_MODE		: 1;
    unsigned TSNS_EN_IRQ		: 1;
    unsigned TSNS_EN_CLK_SENS		: 1;
    unsigned TSNS_EN_CLK_REF		: 1;
    unsigned TSNS_FORCE_CLR_IRQ_IF_EN_IRQ_0		: 1;
  };
  uint32_t as_int;
} snt_r01_t;
#define SNT_R01_DEFAULT {{0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1}}
#define SNT_R01_DEFAULT_AS_INT 0x000802
_Static_assert(sizeof(snt_r01_t) == 4, "Punned Structure Size");

// Register 0x02
typedef union snt_r02{
  struct{
    unsigned TSNS_I_SOSC		: 4;
    unsigned TSNS_I_MIRROR		: 2;
    unsigned TSNS_I_CMP		: 4;
    unsigned TSNS_I_BUF2		: 4;
    unsigned TSNS_I_BUF		: 4;
    unsigned TSNS_R_REF		: 4;
  };
  uint32_t as_int;
} snt_r02_t;
#define SNT_R02_DEFAULT {{0x0, 0x1, 0x1, 0x0, 0x0, 0x8}}
#define SNT_R02_DEFAULT_AS_INT 0x200050
_Static_assert(sizeof(snt_r02_t) == 4, "Punned Structure Size");

// Register 0x03
typedef union snt_r03{
  struct{
    unsigned TSNS_SEL_CONV_TIME		: 4;
    unsigned TSNS_SEL_REF_STB_TIME		: 2;
    unsigned TSNS_SEL_STB_TIME		: 3;
    unsigned TSNS_SEL_VVDD		: 4;
    unsigned TSNS_MOM		: 3;
    unsigned TSNS_MIM		: 3;
  };
  uint32_t as_int;
} snt_r03_t;
#define SNT_R03_DEFAULT {{0x6, 0x2, 0x1, 0xE, 0x4, 0x4}}
#define SNT_R03_DEFAULT_AS_INT 0x049C66
_Static_assert(sizeof(snt_r03_t) == 4, "Punned Structure Size");

// Register 0x04
typedef union snt_r04{
  struct{
    unsigned TSNS_PDIFF		: 15;
  };
  uint32_t as_int;
} snt_r04_t;
#define SNT_R04_DEFAULT {{0x0200}}
#define SNT_R04_DEFAULT_AS_INT 0x000200
_Static_assert(sizeof(snt_r04_t) == 4, "Punned Structure Size");

// Register 0x05
typedef union snt_r05{
  struct{
    unsigned TSNS_POLY		: 24;
  };
  uint32_t as_int;
} snt_r05_t;
#define SNT_R05_DEFAULT {{0x004000}}
#define SNT_R05_DEFAULT_AS_INT 0x004000
_Static_assert(sizeof(snt_r05_t) == 4, "Punned Structure Size");

// Register 0x06
// -- READ-ONLY --

// Register 0x07
typedef union snt_r07{
  struct{
    unsigned TSNS_INT_RPLY_REG_ADDR		: 8;
    unsigned TSNS_INT_RPLY_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} snt_r07_t;
#define SNT_R07_DEFAULT {{0x00, 0x10}}
#define SNT_R07_DEFAULT_AS_INT 0x001000
_Static_assert(sizeof(snt_r07_t) == 4, "Punned Structure Size");

// Register 0x08
typedef union snt_r08{
  struct{
    unsigned TMR_EN_SELF_CLK		: 1;
    unsigned TMR_RESETB_DCDC		: 1;
    unsigned TMR_RESETB_DIV		: 1;
    unsigned TMR_EN_OSC		: 1;
    unsigned TMR_RESETB		: 1;
    unsigned TMR_ISOLATE		: 1;
    unsigned TMR_SLEEP		: 1;
  };
  uint32_t as_int;
} snt_r08_t;
#define SNT_R08_DEFAULT {{0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1}}
#define SNT_R08_DEFAULT_AS_INT 0x000060
_Static_assert(sizeof(snt_r08_t) == 4, "Punned Structure Size");

// Register 0x09
typedef union snt_r09{
  struct{
    unsigned TMR_EN_TUNE2		: 1;
    unsigned TMR_EN_TUNE1		: 1;
    unsigned TMR_SEL_DCAP		: 6;
    unsigned TMR_SEL_CAP		: 8;
    unsigned TMR_CASCODE_BOOST		: 1;
    unsigned TMR_IBIAS_REF		: 4;
    unsigned TMR_SELF_EN		: 1;
    unsigned TMR_SEL_CLK_OSC		: 1;
    unsigned TMR_SEL_CLK_DIV		: 1;
  };
  uint32_t as_int;
} snt_r09_t;
#define SNT_R09_DEFAULT {{0x1, 0x1, 0x3F, 0x80, 0x0, 0x4, 0x1, 0x1, 0x0}}
#define SNT_R09_DEFAULT_AS_INT 0x6880FF
_Static_assert(sizeof(snt_r09_t) == 4, "Punned Structure Size");

// Register 0x0A
typedef union snt_r0A{
  struct{
    unsigned TMR_AFC		: 3;
    unsigned TMR_SAMPLE_EN		: 1;
    unsigned TMR_EN_TUNE2_RES		: 1;
    unsigned TMR_EN_TUNE1_RES		: 1;
    unsigned NOT_DEFINED_10_6		: 1;
    unsigned TMR_DIFF_CON		: 14;
    unsigned TMR_S		: 3;
  };
  uint32_t as_int;
} snt_r0A_t;
#define SNT_R0A_DEFAULT {{0x4, 0x1, 0x1, 0x1, 0x0, 0x3FFF, 0x1}}
#define SNT_R0A_DEFAULT_AS_INT 0x3FFFBC
_Static_assert(sizeof(snt_r0A_t) == 4, "Punned Structure Size");

// Register 0x0B
typedef union snt_r0B{
  struct{
    unsigned TMR_TFR_CON		: 4;
  };
  uint32_t as_int;
} snt_r0B_t;
#define SNT_R0B_DEFAULT {{0xF}}
#define SNT_R0B_DEFAULT_AS_INT 0x00000F
_Static_assert(sizeof(snt_r0B_t) == 4, "Punned Structure Size");

// Register 0x0C
// -- EMPTY --

// Register 0x0D
// -- EMPTY --

// Register 0x0E
// -- EMPTY --

// Register 0x0F
// -- EMPTY --

// Register 0x10
// -- EMPTY --

// Register 0x11
// -- EMPTY --

// Register 0x12
// -- EMPTY --

// Register 0x13
// -- EMPTY --

// Register 0x14
// -- MEMORY-MAPPED --

// Register 0x15
// -- READ-ONLY --

// Register 0x16
// -- READ-ONLY --

// Register 0x17
typedef union snt_r17{
  struct{
    unsigned WUP_INT_RPLY_REG_ADDR		: 8;
    unsigned WUP_INT_RPLY_SHORT_ADDR		: 8;
    unsigned WUP_INT_RPLY_NUM_REGS_1		: 3;
    unsigned WUP_ENABLE_CLK_SLP_OUT		: 1;
    unsigned WUP_CLK_SEL		: 1;
    unsigned WUP_AUTO_RESET		: 1;
    unsigned WUP_IRQ_EN		: 1;
    unsigned WUP_ENABLE		: 1;
  };
  uint32_t as_int;
} snt_r17_t;
#define SNT_R17_DEFAULT {{0x07, 0x10, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0}}
#define SNT_R17_DEFAULT_AS_INT 0x601007
_Static_assert(sizeof(snt_r17_t) == 4, "Punned Structure Size");

// Register 0x18
typedef union snt_r18{
  struct{
    unsigned WUP_INT_RPLY_PAYLOAD		: 24;
  };
  uint32_t as_int;
} snt_r18_t;
#define SNT_R18_DEFAULT {{0x023006}}
#define SNT_R18_DEFAULT_AS_INT 0x023006
_Static_assert(sizeof(snt_r18_t) == 4, "Punned Structure Size");

// Register 0x19
typedef union snt_r19{
  struct{
    unsigned WUP_THRESHOLD_EXT		: 8;
    unsigned WUP_TH_INT_RPLY_REG_ADDR		: 8;
    unsigned WUP_TH_INT_RPLY_SHORT_ADDR		: 8;
  };
  uint32_t as_int;
} snt_r19_t;
#define SNT_R19_DEFAULT {{0x00, 0x07, 0x10}}
#define SNT_R19_DEFAULT_AS_INT 0x100700
_Static_assert(sizeof(snt_r19_t) == 4, "Punned Structure Size");

// Register 0x1A
typedef union snt_r1A{
  struct{
    unsigned WUP_THRESHOLD		: 24;
  };
  uint32_t as_int;
} snt_r1A_t;
#define SNT_R1A_DEFAULT {{0x000000}}
#define SNT_R1A_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(snt_r1A_t) == 4, "Punned Structure Size");

// Register 0x1B
// -- READ-ONLY --

// Register 0x1C
// -- READ-ONLY --

// Register 0x1D
typedef union snt_r1D{
  struct{
    unsigned LC_CLK_RING		: 2;
    unsigned LC_CLK_DIV		: 2;
  };
  uint32_t as_int;
} snt_r1D_t;
#define SNT_R1D_DEFAULT {{0x1, 0x2}}
#define SNT_R1D_DEFAULT_AS_INT 0x000009
_Static_assert(sizeof(snt_r1D_t) == 4, "Punned Structure Size");

// Register 0x1E
// -- EMPTY --

// Register 0x1F
// -- EMPTY --

// Register 0x20
typedef union snt_r20{
  struct{
    unsigned RF2_SLEEP		: 1;
    unsigned RF2_ISOLATE		: 1;
  };
  uint32_t as_int;
} snt_r20_t;
#define SNT_R20_DEFAULT {{0x0, 0x0}}
#define SNT_R20_DEFAULT_AS_INT 0x000000
_Static_assert(sizeof(snt_r20_t) == 4, "Punned Structure Size");

#endif // SNTV6_RF_H
